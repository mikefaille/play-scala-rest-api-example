dist: trusty
sudo: required
services:
- docker
language: scala
before_install:
- openssl aes-256-cbc -K $encrypted_994f1ea3f6dd_key -iv $encrypted_994f1ea3f6dd_iv
  -in id_rsa.enc -out $HOME/.ssh/id_rsa -d
- chmod 400 $HOME/.ssh/id_rsa
- sudo apt-get update
- sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
- wget  https://releases.hashicorp.com/terraform/0.10.7/terraform_0.10.7_linux_amd64.zip
  -O /tmp/terraform.zip && sudo unzip  /tmp/terraform.zip -d /usr/local/bin/ && rm
  /tmp/terraform.zip
jobs:
  include:
  - stage: docker - build test image
    script:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
    - docker build -t sbt-example:test -f Dockerfile.test .
    - docker run sbt-example:test
  - stage: docker - build release image
    script:
    - docker build -t sbt-example:latest .
    - docker tag sbt-example $DOCKER_USERNAME/sbt-example:latest
    - docker images
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
    - if [ "$TRAVIS_BRANCH" == "master" ]; then docker login -u="$DOCKER_USERNAME"
      -p="$DOCKER_PASSWORD"; fi
    - docker tag sbt-example:latest $DOCKER_USERNAME/sbt-example:latest
    - docker push $DOCKER_USERNAME/sbt-example:latest
  - stage: test deployement on aws
    script:
    - cd terraform
    - eval $(ssh-agent) && ssh-add
    - export
    - terraform init
    - terraform destroy -force
    - terraform plan --out myplan.tfplan
    - terraform apply -auto-approve=true myplan.tfplan
    - terraform show myplan.tfplan

notifications:
  email:
    recipients:
      - michael@faille.io
    on_success: always # default: change
    on_failure: always # default: always
